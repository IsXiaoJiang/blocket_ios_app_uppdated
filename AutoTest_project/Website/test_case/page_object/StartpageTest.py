from model.common_fun import Common
from model.loginView import LoginView
from selenium.common.exceptions import NoSuchElementException, NoSuchAttributeException
from time import sleep
from selenium.webdriver.common.by import By



class StartpageTest(Common):

    def search_action(self):
        self.driver.implicitly_wait(2)
        self.check_readMore()
        self.check_okButton()
        searchbar=self.driver.find_element_by_accessibility_id("search_textfield_contentView")
        #searchbar.clear()
        print("-------------------Search with 'hund'-------------------------")
        self.execute_tap(searchbar)
        searchbar.set_value('hund')
        print("-------------------Tap on 'search' on keyboard----------------")
        search=self.driver.find_element_by_accessibility_id("Search")
        self.execute_tap(search)
        self.assert_if_element_exist("type=='XCUIElementTypeStaticText' AND value='hund' ")
        searchbar =self.driver.find_element_by_accessibility_id("search_textfield_contentView")
        self.execute_tap(searchbar)
        print("----------------Tap on x on keyboard--------------------------")
        for i in range(0,4):
            delete=self.driver.find_element_by_accessibility_id("delete")
            self.execute_tap(delete)
        sleep(2)
        avbryt=self.driver.find_element_by_accessibility_id("Avbryt")
        self.execute_tap(avbryt)
        print("-----------assert if hund still exists in searchbar------------")
        self.assert_if_element_exist("type=='XCUIElementTypeStaticText' AND value='hund' ")
        print("-----------------Tap on search suggestion'hundar'---------------------")
        searchbar=self.driver.find_element_by_accessibility_id("search_textfield_contentView")
        self.execute_tap(searchbar)
        sleep(2)
        hundbur=self.driver.find_element_by_accessibility_id("hundbur")
        self.execute_tap(hundbur)
        print("-------------Assert if hundbur in searchbar--------------------")
        self.assert_if_element_exist("type=='XCUIElementTypeStaticText' AND value='hundbur' ")
        '''
        print("-------------------Click on x---------------------------------")
        self.driver.find_element_by_accessibility_id("search_textfield_contentView").click()
        #sleep(2)
        #self.driver.execute_script("mobile: tap", {"tapCount": 1, "touchCount": 1, "duration": 0.5, "x": 285, "y": 33})
        #sleep(2)
        self.driver.find_element_by_accessibility_id("Search").click()
        #sleep(2)
        '''
        print("-----------Tap on search suggestion arrow 'kattungar'--------")
        searchbar = self.driver.find_element_by_accessibility_id("search_textfield_contentView")
        self.execute_tap(searchbar)
        clear = self.driver.find_element_by_accessibility_id("delete")
        for i in range(0,7):
            self.execute_tap(clear)
        #searchbar.clear()
        searchbar.set_value('kattungar')
        pil =self.driver.find_elements_by_ios_predicate("type=='XCUIElementTypeButton' AND label='inc paste text' ")
        pil=pil[0]
        self.execute_tap(pil)
        search=self.driver.find_element_by_accessibility_id("Search")
        self.execute_tap(search)
        self.assert_if_element_exist("type=='XCUIElementTypeStaticText' AND value='kattungar' ")
        sleep(12)
        print("-------------------Tap on latest (senast)--------------------")
        searchbar = self.driver.find_element_by_accessibility_id("search_textfield_contentView")
        print("-----------------------tap searchbar-------------------------")
        self.execute_tap(searchbar)
        clear = self.driver.find_element_by_accessibility_id("delete")
        for i in range(0, 9):
            self.execute_tap(clear)
        #searchbar.clear()
        self.execute_tap(searchbar)
        katt=self.driver.find_element_by_accessibility_id("kattungar")
        self.execute_tap(katt)
        self.assert_if_element_exist("type=='XCUIElementTypeStaticText' AND value='kattungar' ")
        print("-----------------------clear search-------------------------")
        searchbar = self.driver.find_element_by_accessibility_id("search_textfield_contentView")
        self.execute_tap(searchbar)
        clear = self.driver.find_element_by_accessibility_id("delete")
        for i in range(0, 9):
            self.execute_tap(clear)
        #searchbar.clear()
        search = self.driver.find_element_by_accessibility_id("Search")
        self.execute_tap(search)

    def filter_action(self):
        print("--------------------------Tap on 'Filtrera'-------------------------")
        filter = self.driver.find_element_by_accessibility_id("Filtrera")
        self.execute_tap(filter)
        print("--------------------------Tap on 'Avbryt'-------------------------")
        avbryt = self.driver.find_element_by_accessibility_id("Avbryt")
        self.execute_tap(avbryt)
        print("--------------------------Tap on 'Filtrera' again-----------------")
        sleep(2)
        filter = self.driver.find_element_by_accessibility_id("Filtrera")
        self.execute_tap(filter)
        print("---------Click on plats----------------------------")
        plats_button = self.find_element(By.XPATH, "//XCUIElementTypeStaticText[@name='Plats']")
        self.execute_tap(plats_button)
        print("---------Swipeup so i can see stockholm----------------------------")
        self.swipeup()
        print("----------------Click on Stockholm--------------------------")
        plats = self.driver.find_elements_by_ios_predicate("type=='XCUIElementTypeOther' AND label='nedåt' ")
        self.execute_tap(plats[11])
        print("---------Swipeup so i can see stockholm stad----------------------------")
        self.swipeup()
        print("--------------Click on stockholm stad-----------------------")
        stockholm_stad = self.find_element(By.XPATH, "(//XCUIElementTypeOther[@name='nedåt'])[17]")
        self.execute_tap(stockholm_stad)
        print("-----------välj Bromma och Östermalm,Djurgården---------------")
        bromma = self.driver.find_element_by_accessibility_id("Bromma")
        self.execute_tap(bromma)
        print("--------------swipe up to see Östermalm, Djurgården-----------------------")
        self.swipeup()
        ostermalm = self.driver.find_element_by_accessibility_id("Östermalm, Djurgården")
        self.execute_tap(ostermalm)
        klar = self.driver.find_element_by_accessibility_id("Klar")
        self.execute_tap(klar)
        if self.is_element_exist("Östermalm, Djurgården"):
            print("Östermalm, Djurgården exists")
        else:
            print("no 'Östermalm, Djurgården, Bromma' on the page ")
        print("----------------Click on 'plats again' -------------------------'")
        self.driver.implicitly_wait(2)
        plats_button = self.driver.find_element_by_accessibility_id("Plats")
        self.execute_tap(plats_button)
        print("----------------Click on 'Hela Sverige' -------------------------'")
        self.driver.implicitly_wait(2)
        hela_sverige = self.driver.find_element_by_accessibility_id("Hela Sverige")
        self.execute_tap(hela_sverige)
        print("----------------Click on 'Filterera' -------------------------'")
        sleep(2)
        filter = self.driver.find_element_by_accessibility_id("Filtrera")
        self.execute_tap(filter)
        print("----------------Turn on 'Angränsande län' -------------------------'")
        sleep(2)
        angransande_lan = self.driver.find_element_by_ios_predicate(
            "type=='XCUIElementTypeSwitch' AND label='Angränsande län' ")
        self.execute_tap(angransande_lan)
        print("----------------Turn off 'Angränsande län' -------------------------'")
        self.driver.implicitly_wait(2)
        angransande_lan = self.driver.find_element_by_ios_predicate(
            "type=='XCUIElementTypeSwitch' AND label='Angränsande län' ")
        self.execute_tap(angransande_lan)
        print("----------------Click on 'GPS' -------------------------'")
        self.driver.implicitly_wait(2)
        gps = self.driver.find_element_by_accessibility_id("Hitta nuvarande plats")
        self.execute_tap(gps)
        print("----------------if a permission need -------------------------'")
        self.driver.implicitly_wait(6)
        try:
            permit = self.driver.find_element_by_accessibility_id("Tillåt medan appen används")
        except NoSuchElementException:
            print('no permitssion need')
        else:
            self.execute_tap(permit)
        '''
        try:
            self.driver.find_element_by_accessibility_id("Vasastan, Norrmalm")
        except NoSuchAttributeException:
            print("No 'Vasastan, Norrmalm' on the page")
        '''
        print("-----------------------Click on 'Kategori'--------------------------")
        self.driver.implicitly_wait(2)
        kategori = self.driver.find_element_by_accessibility_id("Kategori")
        self.execute_tap(kategori)
        print("-----------------------Click on 'Forton'--------------------------")
        self.driver.implicitly_wait(2)
        fordon = self.driver.find_element_by_accessibility_id("Fordon")
        self.execute_tap(fordon)
        print("-----------------------Click on 'Båtar'--------------------------")
        self.driver.implicitly_wait(2)
        batar = self.driver.find_element_by_accessibility_id("Båtar")
        self.execute_tap(batar)
        print("-----------------------swipe from left to right to go back-------------------")
        self.swiperight()
        sleep(2)
        print("-----------------------Click on 'Bilar'--------------------------")
        self.driver.implicitly_wait(2)
        bilar = self.driver.find_element_by_accessibility_id("Bilar")
        self.execute_tap(bilar)
        sleep(2)
        print("--------------------Click on Märke & modell----------------------")
        self.driver.implicitly_wait(2)
        modell = self.driver.find_element_by_accessibility_id("Märke & modell")
        self.execute_tap(modell)
        print("--------------------swipe up twice----------------------")
        self.driver.execute_script("mobile: scroll", {"direction": 'down'})
        self.driver.execute_script("mobile: scroll", {"direction": 'down'})
        self.driver.execute_script("mobile: scroll", {"direction": 'down'})
        self.driver.execute_script("mobile: scroll", {"direction": 'down'})
        #self.driver.execute_script("mobile: scroll", {"direction": 'down'})
        print("--------------------Click on 'vovlo'----------------------")
        self.driver.implicitly_wait(2)
        volvo = self.find_element(By.XPATH, "(//XCUIElementTypeOther[@name='nedåt'])[69]")
        self.execute_tap(volvo)
        print("-------------Click on '240 & 260'---------------------------------")
        self.driver.implicitly_wait(2)
        b240_260 = self.find_element(By.XPATH, "(//XCUIElementTypeOther[@name='nedåt'])[2]")
        self.execute_tap(b240_260)
        print("-------------Click on '240'---------------------------------")
        self.driver.implicitly_wait(2)
        b240 = self.driver.find_element_by_accessibility_id("240")
        self.execute_tap(b240)
        print("-------------Click on 'klar'---------------------------------")
        self.driver.implicitly_wait(2)
        klar = self.driver.find_element_by_accessibility_id("Klar")
        self.execute_tap(klar)
        try:
            self.driver.find_element_by_accessibility_id("240")
        except NoSuchAttributeException:
            print("There is a problem with the selection of märke & modell")
        print("--------------------Click on Pris----------------------")
        self.driver.implicitly_wait(2)
        pris = self.driver.find_element_by_accessibility_id("Pris")
        self.execute_tap(pris)
        print("--------------------Swipe to choose pris----------------------")
        self.driver.implicitly_wait(2)
        self.driver.execute_script("mobile: scroll", {"direction": 'down'})
        print("--------------------Click on Pris again----------------------")
        self.driver.implicitly_wait(2)
        pris = self.driver.find_element_by_accessibility_id("Pris")
        self.execute_tap(pris)
        print("--------------------Click on Modellår----------------------")
        self.driver.implicitly_wait(2)
        modelyear = self.driver.find_element_by_accessibility_id("Modellår")
        self.execute_tap(modelyear)
        print("--------------------Swipe to choose modelår----------------------")
        self.driver.implicitly_wait(2)
        self.driver.execute_script("mobile: scroll", {"direction": 'down'})
        print("--------------------Click on modelår again----------------------------")
        self.driver.implicitly_wait(2)
        self.execute_tap(modelyear)
        print("--------------------Click on Miltal-----------------------------------")
        self.driver.implicitly_wait(2)
        miltal = self.driver.find_element_by_accessibility_id("Miltal")
        self.execute_tap(miltal)
        print("--------------------Swipe to choose miltal----------------------------")
        self.driver.implicitly_wait(2)
        self.driver.execute_script("mobile: scroll", {"direction": 'down'})
        print("--------------------Click on mital again------------------------------")
        self.driver.implicitly_wait(2)
        self.execute_tap(miltal)
        print("--------------------Click on Drivmedel--------------------------------")
        self.driver.implicitly_wait(2)
        Drivmedel = self.driver.find_element_by_accessibility_id("Drivmedel")
        self.execute_tap(Drivmedel)
        print("--------------------Swipe to choose Drivmedel----------------------")
        self.driver.implicitly_wait(2)
        self.driver.execute_script("mobile: scroll", {"direction": 'down'})
        print("--------------------Click on Drivmedel again--------------------------")
        self.driver.implicitly_wait(2)
        self.execute_tap(Drivmedel)
        print("-------------------------Click on typ av bil -------------------------")
        self.driver.implicitly_wait(2)
        typAvBil = self.driver.find_element_by_accessibility_id("Typ av bil")
        self.execute_tap(typAvBil)
        print("-------------------------Click on småbil,kombi,Yrkesfordon --------------")
        self.driver.implicitly_wait(2)
        smabil = self.driver.find_element_by_accessibility_id("Småbil")
        self.execute_tap(smabil)
        kombi = self.driver.find_element_by_accessibility_id("Kombi")
        self.execute_tap(kombi)
        yrkesfordon = self.driver.find_element_by_accessibility_id("Yrkesfordon")
        self.execute_tap(yrkesfordon)
        print("--------------------Click on klar-----------------------------------")
        self.driver.implicitly_wait(2)
        klar = self.driver.find_element_by_accessibility_id("Klar")
        self.execute_tap(klar)
        print("--------------------Click on Växellåda-----------------------------------")
        vaxelLada = self.driver.find_element_by_accessibility_id("Växellåda")
        self.execute_tap(vaxelLada)
        self.swipeup()
        '''
        print("--------------------Scroll to choose Växellåda---------------------------")
        self.driver.execute_script("mobile: scroll", {"direction": 'down'})
        '''
        print("--------------------Click on Växellåda again------------------------------")
        self.driver.implicitly_wait(2)
        self.execute_tap(vaxelLada)
        print("-------------------------Click on Färg -----------------------------------")
        self.driver.implicitly_wait(2)
        farg = self.driver.find_element_by_accessibility_id("Färg")
        self.execute_tap(farg)
        print("-------------------------Click on vit röd blå ----------------------------")
        self.driver.implicitly_wait(2)
        vit = self.driver.find_element_by_accessibility_id("Vit")
        self.execute_tap(vit)
        red = self.driver.find_element_by_accessibility_id("Röd")
        self.execute_tap(red)
        blue = self.driver.find_element_by_accessibility_id("Blå")
        self.execute_tap(blue)
        print("-------------------------Click on klar------ ----------------------------")
        self.driver.implicitly_wait(2)
        klar = self.driver.find_element_by_accessibility_id("Klar")
        self.execute_tap(klar)
        print("--------------------Click on Drivhjul-------------------------------------")
        self.driver.implicitly_wait(2)
        Drivhjul =self.driver.find_element_by_accessibility_id("Drivhjul")
        self.execute_tap(Drivhjul)
        print("--------------------Scroll to choose Drivhjul----------------------------")
        self.driver.execute_script("mobile: scroll", {"direction": 'down'})
        print("--------------------Click on Drivhjul again------------------------------")
        self.driver.implicitly_wait(2)
        self.execute_tap(Drivhjul)
        print("--------------------Click on Hästkrafter---------------------------------")
        self.driver.implicitly_wait(2)
        hastkrafter = self.driver.find_element_by_accessibility_id("Hästkrafter")
        self.execute_tap(hastkrafter)
        self.swipeup()
        '''
        print("--------------------Scroll to choose Hästkrafter-------------------------")
        self.driver.execute_script("mobile: scroll", {"direction": 'down'})
        '''
        print("--------------------Click on Hästkrafter again---------------------------")
        self.driver.implicitly_wait(2)
        self.execute_tap(hastkrafter)
        '''
        print("--------------------Turn on Gratis fordonshistorik---------------------------")
        self.driver.find_element_by_ios_predicate("type=='XCUIElementTypeSwitch' AND label='Gratis fordonshistorik' ").click()
        print("--------------------Turn on Premiumgaranti---------------------------------")
        self.driver.find_element_by_ios_predicate("type=='XCUIElementTypeSwitch' AND label='Premiumgaranti' ").click()
        '''
        print("--------------------Click on Privatleasing----------------------------------")
        self.driver.implicitly_wait(2)
        privatLeasing = self.driver.find_element_by_accessibility_id("Privatleasing")
        self.execute_tap(privatLeasing)
        self.swipeup()
        '''
        print("--------------------Scroll to choose Privatleasing----------------------------------")
        self.driver.execute_script("mobile: scroll", {"direction": 'down'})
        '''
        print("--------------------Click on Privatleasing again------------------------------------")
        self.driver.implicitly_wait(2)
        self.execute_tap(privatLeasing)
        print("--------------------Turn on Begagnatförsäkring---------------------------")
        self.driver.implicitly_wait(2)
        begagnatforsakring = self.driver.find_element_by_ios_predicate(
            "type=='XCUIElementTypeSwitch' AND name='Begagnatförsäkring' ")
        self.execute_tap(begagnatforsakring)
        self.driver.execute_script("mobile: scroll", {"direction": 'down'})
        print("--------------------Click on Sortering---------------------------------------------")
        self.driver.implicitly_wait(2)
        sorting = self.driver.find_element_by_accessibility_id("Sortering")
        self.execute_tap(sorting)
        print("-------------------- Scroll to choose Sortering------------------------------------")
        self.driver.implicitly_wait(2)
        self.driver.execute_script("mobile: scroll", {"direction": 'down'})
        print("--------------------Click on Sortering again---------------------------------------")
        self.driver.implicitly_wait(2)
        self.execute_tap(sorting)
        '''
        print("--------------------Click on Annonsör-----------------------------------------------")
        self.driver.implicitly_wait(2)
        annonsor = self.driver.find_element_by_accessibility_id("Annonsör")
        # annonsor.click()
        actions.tap(annonsor)
        actions.perform()
        print("-------------------- Scroll to choose Annonsör------------------------------------")
        self.driver.execute_script("mobile: scroll", {"direction": 'down'})
        print("--------------------Click on Annonsör again-----------------------------------------")
        self.driver.implicitly_wait(2)
        # annonsor.click()
        actions.tap(annonsor)
        actions.perform()
        # self.driver.find_element_by_accessibility_id("Annonsör").click()
        '''
        print("--------------------Click on Typ av annons-----------------------------------------")
        self.driver.implicitly_wait(2)
        TypAvAnnons = self.driver.find_element_by_accessibility_id("Typ av annons")
        self.execute_tap(TypAvAnnons)
        print("--------------------Scroll to choose Typ av annons----------------------------------")
        self.driver.execute_script("mobile: scroll", {"direction": 'down'})
        print("--------------------Click on Typ av annons again--------------------------------------")
        self.driver.implicitly_wait(2)
        self.execute_tap(TypAvAnnons)
        print("--------------------Click on visa stora bilder--------------------------------------")
        self.driver.implicitly_wait(2)
        stora_bild = self.driver.find_element_by_ios_predicate(
            "type=='XCUIElementTypeSwitch' AND name='Visa stora bilder' ")
        self.execute_tap(stora_bild)
        print("--------------------Click on visa stora bilder again----------------------------------")
        self.driver.implicitly_wait(2)
        stora_bild = self.driver.find_element_by_ios_predicate(
            "type=='XCUIElementTypeSwitch' AND name='Visa stora bilder' ")
        self.execute_tap(stora_bild)
        print("--------------------Click on Dela sökning--------------------------------------------")
        self.driver.implicitly_wait(2)
        dela_sokning = self.driver.find_element_by_accessibility_id("Dela sökning")
        self.execute_tap(dela_sokning)
        close = self.driver.find_element_by_accessibility_id("Stäng")
        self.driver.implicitly_wait(2)
        self.execute_tap(close)
        print("--------------------Click on Visa x träffar----------------------------------------")
        self.driver.implicitly_wait(2)
        result = self.driver.find_element_by_accessibility_id("Visa Resultat")
        self.execute_tap(result)
        self.is_element_exist("type=='XCUIElementTypeStaticText' AND name='Spara bevakning' ")
        print("--------------------Click on filter again------------------------------------")
        self.driver.implicitly_wait(2)
        filter = self.driver.find_element_by_accessibility_id("Filtrera")
        self.execute_tap(filter)
        print("--------------------Click on rensa------------------------------------")
        self.driver.implicitly_wait(2)
        rensa = self.driver.find_element(By.XPATH,'//XCUIElementTypeButton[@name="Rensa (3)"]')
        self.execute_tap(rensa)
        result =self.driver.find_element_by_accessibility_id("Visa Resultat")
        self.execute_tap(result)
        print("--------------------if there are Säljes i hela sverige on the page --------------------")
        self.driver.implicitly_wait(2)
        try:
            self.driver.find_element_by_ios_predicate("type=='XCUIElementTypeButton' AND name='Säljes i hela Sverige' ")
        except NoSuchElementException:
            print("Error")

    def list_action(self):
        self.driver.implicitly_wait(3)
        print("--------------------Click on hjärta för att spara bevakningar----------------------")
        adwatch_heart=self.find_element(By.XPATH,"//XCUIElementTypeButton[@name='Säljes i hela Sverige']/following-sibling::XCUIElementTypeButton")
        self.execute_tap(adwatch_heart)
        print("--------------------Log in--------------------------------------------------------")
        hi = LoginView(self.driver)
        hi.login_action('760800543@qq.com')
        sleep(2)
        print("--------------------if there is ja,Click on ja ------------------------------------")
        try:
            ja=self.driver.find_element_by_accessibility_id("Ja")
        except NoSuchElementException:
            print('ej ja')
        else:
            self.execute_tap(ja)
        print("--------------------if there is Tillåt, click on Tillåt----------------------------")
        try:
            allow=self.driver.find_element_by_ios_predicate("type=='XCUIElementTypeButton' AND label='Tillåt' ")
        except NoSuchElementException:
            print('ej tillåt')
        else:
            self.execute_tap(allow)
        print("--------------------Click on Sparade------------------------------------------------")
        sparade=self.driver.find_element_by_accessibility_id("Sparade")
        self.execute_tap(sparade)
        self.is_element_exist("Alla kategorier, Hela Sverige")
        print("--------------------Click on Annonser------------------------------------------------")
        annonser= self.driver.find_element_by_accessibility_id("Annonser")
        self.execute_tap(annonser)
        print("--------------------Click on hjärta to get rid of adwatches----------------------")
        adwatch_heart=self.find_element(By.XPATH,
                          "//XCUIElementTypeButton[@name='Säljes i hela Sverige']/following-sibling::XCUIElementTypeButton")
        self.execute_tap(adwatch_heart)
        print("--------------------Click on Sparade------------------------------------------------")
        self.execute_tap(sparade)
        try:
            self.driver.find_element_by_accessibility_id("Du har inga bevakningar")
        except NoSuchElementException:
            print(" the function of adwatch has prolem")
        self.execute_tap(annonser)
        print("--------------------Click on the first ad-------------------------------------------------")
        cell = self.driver.find_elements_by_ios_predicate("type=='XCUIElementTypeCell' ")
        self.execute_tap(cell[0])
        self.driver.back()
        self.swipeup()
        print("--------------------Click on the first ad of the second page-----------------------------")
        cell = self.driver.find_elements_by_ios_predicate("type=='XCUIElementTypeCell' ")
        self.execute_tap(cell[2])
        backToAnnonser=self.driver.find_element_by_ios_predicate("type=='XCUIElementTypeButton' AND label='Annonser' ")
        self.execute_tap(backToAnnonser)
        self.driver.execute_script("mobile: scroll", {"direction": 'up'})
        print("--------------------Click on the searchbar-----------------------------------------------")
        sleep(3)
        searchbar = self.driver.find_element_by_ios_predicate("type=='XCUIElementTypeTextField' AND value='Sök' ")
        self.execute_tap(searchbar)
        searchbar.set_value('canon 800d')
        search = self.driver.find_element_by_accessibility_id("Search")
        self.execute_tap(search)
        '''
        print("--------------------Scroll----------------------------------------------------------")
        self.driver.execute_script("mobile: scroll", {"direction": 'down'})
        #self.swipeup()
        print("--------------------Click on the Spara bevakning-----------------------------------------------")
        sparaBevakningar =self.driver.find_element_by_ios_predicate("type=='XCUIElementTypeStaticText' AND label='Spara bevakning' ")
        #sparaBevakningar=self.driver.find_element_by_accessibility_id("Spara bevakning")
        actions.tap(sparaBevakningar)
        actions.perform()
        sleep(2)
        ja = self.driver.find_element_by_accessibility_id("Ja")
        actions.tap(ja)
        actions.perform()
        print("--------------------assert if Spara bevakning is working----------------------------------------")
        sparade = self.driver.find_element_by_accessibility_id("Sparade")
        actions.tap(sparade)
        actions.perform()
        #sparade.click()
        try:
            self.driver.find_element_by_accessibility_id("canon 800d, Alla kategorier, Hela Sverige")
        except NoSuchElementException:
            print(" the function of bevakning has prolem")
        '''
        try:
            self.driver.find_element_by_accessibility_id("Spara bevakning")
        except NoSuchElementException:
            print(" the function of bevakning has prolem")
        hi = LoginView(self.driver)
        hi.logout_action("xiaoqq")
        try:
            self.driver.find_element_by_ios_predicate("type=='XCUIElementTypeButton' AND label='Logga in & kom igång!' ")
        except NoSuchElementException:
            print(" the function of bevakning has prolem")